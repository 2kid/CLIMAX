@model CLIMAX.Models.Patient

@{
    ViewBag.Title = "Patient - Edit";
}
<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Patient Record</h1>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <p>
                            @Html.ActionLink("Patients", "Index") > Edit
                        </p>
                        Edit Patient Record
                    </div>
                    <!-- /.panel-heading -->
                    <div class="panel-body">
                        <div class="dataTable_wrapper">
                            <div class="form-horizontal">
                              @using (Html.BeginForm("Edit", "Patients", FormMethod.Post, new { id = "patientForm" }))
                              {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        <h4>Patient</h4>
                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.PatientID)

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <input name="BirthDate" class="ui-datepicker date-picker form-control" value="@Model.BirthDate.ToString("yyyy-MM-dd")" />
                                              </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <div class="checkbox">
                                                    @Html.DropDownList("Gender")
                                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CivilStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.CivilStatus, (IEnumerable<SelectListItem>)ViewBag.CivilStatus)
                                                @Html.ValidationMessageFor(model => model.CivilStatus, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", placeholder = "ex. 5'10\"" } })
                                                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control col-md-4", type = "number", min = "1", max = "999" } }) <span class="col-md-1">kg</span>
                                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.HomeNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.HomeNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.HomeNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LandlineNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.HiddenFor(model => model.LandlineNo)
                                                <span class="col-md-2" style="font-size:x-large">
                                                    @Html.DropDownList("areaCode", (IEnumerable<SelectListItem>)ViewBag.areaCode, "", new { @class = "col-md-12" })
                                                </span>
                                                <span class="col-md-2">
                                                    @Html.Editor("landlineNo", new { htmlAttributes = new { @class = "form-control", maxlength = "7" } })
                                                </span>
                                                <h5 class="col-md-1 margintop-0"> local</h5>
                                                <span class="col-md-1">
                                                    @Html.Editor("extCode", new { htmlAttributes = new { @class = "form-control", maxlength = "3" } })
                                                </span>
                                                (ex. 02 7263190 local 123)
                                                <br />
                                                @Html.ValidationMessageFor(model => model.LandlineNo, "", new { @class = "text-danger" })
                                             </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CellphoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.CellphoneNo, new { htmlAttributes = new { @class = "form-control" , maxlength="11" } })
                                                @Html.ValidationMessageFor(model => model.CellphoneNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmergencyContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.EmergencyContactNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmergencyContactNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmergencyContactFName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.EmergencyContactFName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmergencyContactFName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmergencyContactMName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.EmergencyContactMName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmergencyContactMName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmergencyContactLName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.EmergencyContactLName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmergencyContactLName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input id="Edit" type="button" value="Save" class="btn btn-default" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
@Scripts.Render("~/bundles/jqueryval")
<script src="@Url.Content("~/Scripts/jquery-ui-1.11.4.min.js")"></script>
<script>
    $(document).ready(function() {
        if ($("#LandlineNo").val() != "" && $("#LandlineNo").val() != undefined) {
            var array = $("#LandlineNo").val().split('-', 3)
            $("#areaCode").val(array[0]);
            $("#landlineNo").val(array[1]);
            $("#extCode").val(array[2]);
        }

        $("#landlineNo").keydown(filterNumeric);
        $("#extCode").keydown(filterNumeric);
        $("#EmergencyContactNo").keydown(filterNumeric);
        $("#Edit").click(function () {
            var area = $("#areaCode").val();
            var landline = $("#landlineNo").val();
            var ext = $("#extCode").val();
            if (area != "" || landline != "" || ext != "") {
                $("#LandlineNo").val(area + '-' + landline + "-" + ext);
            }
            else {
                $("#LandlineNo").val("00-0000000-000");
            }
            $("#patientForm").submit();
        });
        $(".date-picker").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd',
            beforeShow: function (input, inst) {
                $(inst.dpDiv).removeClass('calendar-off');
            },
           // setDate: '@Model.BirthDate.ToString("yyyy-MM-dd")',
            defaultDate: '@Model.BirthDate.ToString("yyyy-MM-dd")'
            });
        });
</script>

}